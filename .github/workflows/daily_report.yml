name: Envoi automatique rapport PERSPECTIVIA

on:
  schedule:
    # Tous les jours √† 8h00 heure de Paris (7h UTC en hiver)
    - cron: '0 7 * * *'

  # Permet un d√©clenchement manuel
  workflow_dispatch:

jobs:
  send-report:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.13'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pandas openpyxl matplotlib python-pptx selenium

    - name: Install Chrome and ChromeDriver
      run: |
        # Install Chrome
        wget -q -O - https://dl-ssl.google.com/linux/linux_signing_key.pub | sudo apt-key add -
        sudo sh -c 'echo "deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main" >> /etc/apt/sources.list.d/google.list'
        sudo apt-get update
        sudo apt-get install -y google-chrome-stable

        # Install ChromeDriver
        CHROME_VERSION=$(google-chrome --version | awk '{print $3}' | cut -d'.' -f1)
        wget -q "https://edgedl.me.gvt1.com/edgedl/chrome/chrome-for-testing/${CHROME_VERSION}.0.6723.69/linux64/chromedriver-linux64.zip"
        unzip -q chromedriver-linux64.zip
        sudo mv chromedriver-linux64/chromedriver /usr/local/bin/
        sudo chmod +x /usr/local/bin/chromedriver
        chromedriver --version

    - name: Download Excel file from SharePoint
      env:
        DISPLAY: :99
        # Secrets optionnels (uniquement si le lien SharePoint n√©cessite une authentification)
        SHAREPOINT_USERNAME: ${{ secrets.SHAREPOINT_USERNAME }}
        SHAREPOINT_PASSWORD: ${{ secrets.SHAREPOINT_PASSWORD }}
      run: |
        echo "=========================================="
        echo "  T√âL√âCHARGEMENT SHAREPOINT"
        echo "=========================================="
        # D√©marrer Xvfb pour Chrome headless
        sudo Xvfb -ac :99 -screen 0 1920x1080x24 > /dev/null 2>&1 &
        sleep 2
        # Ex√©cuter le robot de t√©l√©chargement (fonctionne avec ou sans credentials)
        python download_robot.py
        # V√©rifier le t√©l√©chargement
        if [ -f "NOUVEAU FAC PERSPECTIVIA.xlsx" ]; then
          echo "‚úÖ Fichier t√©l√©charg√© avec succ√®s"
          ls -lh "NOUVEAU FAC PERSPECTIVIA.xlsx"
        else
          echo "‚ùå ERREUR: Fichier non t√©l√©charg√©"
          exit 1
        fi

    - name: Generate data and checklists
      run: |
        echo "üìä G√©n√©ration des donn√©es et checklists..."
        python t.py

    - name: Send email report
      env:
        SMTP_USERNAME: ${{ secrets.SMTP_USERNAME }}
        SMTP_PASSWORD: ${{ secrets.SMTP_PASSWORD }}
      run: |
        echo "Envoi de l'email..."
        python email_sender/send_report_safe.py

    - name: Upload artifacts
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: rapport-perspectivia-${{ github.run_number }}
        path: |
          Checklist/*.xlsx
          Rapport_PERSPECTIVIA.pptx
          NOUVEAU FAC PERSPECTIVIA.xlsx
        retention-days: 7
